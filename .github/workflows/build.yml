name: Build WASM Example

on:
  push:
  pull_request:

jobs:
  cargo-test:
    name: cargo test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
      - name: Install dependencies
        run: sudo apt-get install libwayland-dev libxkbcommon-dev
      - run: cargo test

  cargo-fmt:
    name: cargo fmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
      - name: Install dependencies
        run: sudo apt-get install libwayland-dev libxkbcommon-dev
      - run: cargo fmt --all -- --check

  cargo-clippy:
    name: cargo clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
      - name: Install dependencies
        run: sudo apt-get install libwayland-dev libxkbcommon-dev
      - run: cargo clippy --all-targets --all-features -- -D warnings

  cargo-doc:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
      - name: Install dependencies
        run: sudo apt-get install libwayland-dev libxkbcommon-dev
      - run: cargo doc

  # cargo-fuzz:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: actions-rust-lang/setup-rust-toolchain@v1
  #       with:
  #         toolchain: nightly
  #     - name: Install dependencies
  #       run: sudo apt-get install libwayland-dev libxkbcommon-dev libasound2-dev libudev-dev
  #     - name: Install cargo-fuzz
  #       run: cargo install cargo-fuzz
  #     - run: cargo fuzz run fuzz_galaxy -- -max_total_time=20
  #     - run: cargo fuzz run fuzz_link -- -max_total_time=20
  #     - run: cargo fuzz run fuzz_mean_to_center -- -max_total_time=20
  #     - run: cargo fuzz run fuzz_repulsion -- -max_total_time=20
  #     - run: cargo fuzz run fuzz_window_border -- -max_total_time=20

  build-wasm:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          rustflags:

      - name: Add wasm32 target
        run: rustup target add wasm32-unknown-unknown

      - name: Install wasm-bindgen-cli
        run: cargo install wasm-bindgen-cli

      - name: Build with cargo
        run: cargo build --release --target wasm32-unknown-unknown

      - name: Run wasm-bindgen
        run: |
          wasm-bindgen --out-dir examples/wasm/target \
                       --out-name wasm_example \
                       --target web target/wasm32-unknown-unknown/release/*.wasm

      - name: Upload artifact (optional)
        id: deployment
        uses: actions/upload-pages-artifact@v3
        with:
          path: examples/wasm

  deploy:
    if: github.ref == 'refs/heads/main'
    needs: build-wasm
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    permissions:
      pages: write
      id-token: write
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
